{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template for Cost and Usage Report",
    "Metadata": {
        "CloudFormationStackName": "AWSCostUsageReport-<environmentname>"
    },
    "Parameters": {
        "BillingEnvironmentName": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "dev",
            "Description": "The target environment in which the stack is being created",
            "MinLength": 2,
            "Type": "String"
        },
        "deploymentRole": {
            "Description": "Deployment role arn",
            "Type": "String"
        }
    },
    "Mappings": {
        "General": {
            "Attributes": {
                "OutputBucketNamePrefix": "rx-aws-cost-usage-report"
            }
        }
    },
    "Resources": {
        "AWSCURDatabase": {
            "Type": "AWS::Glue::Database",
            "DependsOn": "AWSCURBucket",
            "Properties": {
                "DatabaseInput": {
                    "Name": {
                        "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                    }
                },
                "CatalogId": {
                    "Ref": "AWS::AccountId"
                }
            }
        },
        "AWSCURBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Fn::FindInMap": [
                                    "General",
                                    "Attributes",
                                    "OutputBucketNamePrefix"
                                ]
                            },
                            {
                                "Ref": "BillingEnvironmentName"
                            }
                        ]
                    ]
                }
            }
        },
        "AWSCURBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "DependsOn": "AWSCURBucket",
            "Properties": {
                "Bucket": {
                    "Ref": "AWSCURBucket"
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Sid": "Stmt1335892150622",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "billingreports.amazonaws.com"
                            },
                            "Action": [
                                "s3:GetBucketAcl",
                                "s3:GetBucketPolicy"
                            ],
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "AWSCURBucket"
                                        }
                                    ]
                                ]
                            },
                            "Condition": {
                                "StringEquals": {
                                    "aws:SourceAccount": {
                                        "Ref": "AWS::AccountId"
                                    },
                                    "aws:SourceArn": {
                                        "Fn::Join": [
                                            ":",
                                            [
                                                "arn:aws:cur",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                "definition/*"
                                            ]
                                        ]
                                    }
                                }
                            }
                        },
                        {
                            "Sid": "Stmt1335892526596",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "billingreports.amazonaws.com"
                            },
                            "Action": "s3:PutObject",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref": "AWSCURBucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            },
                            "Condition": {
                                "StringEquals": {
                                    "aws:SourceAccount": {
                                        "Ref": "AWS::AccountId"
                                    },
                                    "aws:SourceArn": {
                                        "Fn::Join": [
                                            ":",
                                            [
                                                "arn:aws:cur",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                "definition/*"
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        "AWSCURCrawlerComponentFunctionRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": "AWSCURBucket",
            "Properties": {
                "RoleName": {
                    "Fn::Sub": "AWSCURCrawlerComponentFunctionRole-${BillingEnvironmentName}"
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "glue.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "AWSCURCrawlerComponentFunction",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "glue:UpdateDatabase",
                                        "glue:UpdatePartition",
                                        "glue:CreateTable",
                                        "glue:UpdateTable",
                                        "glue:ImportCatalogToGlue"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:::",
                                                {
                                                    "Ref": "AWSCURBucket"
                                                },
                                                "/Cost_Report",
                                                "/AWS_Cost_Report",
                                                "/AWS_Cost_Report*"
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "AWSCURKMSDecryption",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AWSCURCrawlerLambdaExecutorRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": "AWSCURBucket",
            "Properties": {
                "RoleName": {
                    "Fn::Sub": "AWSCURCrawlerLambdaExecutorRole-${BillingEnvironmentName}"
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "AWSCURCrawlerLambdaExecutor",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "glue:StartCrawler"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AWSCURCrawler": {
            "Type": "AWS::Glue::Crawler",
            "DependsOn": [
                "AWSCURDatabase",
                "AWSCURCrawlerComponentFunctionRole"
            ],
            "Properties": {
                "Name": "AWSCURCrawler-AWS_Cost_Report",
                "Description": "A recurring crawler that keeps your CUR table in Athena up-to-date.",
                "Role": {
                    "Fn::GetAtt": [
                        "AWSCURCrawlerComponentFunctionRole",
                        "Arn"
                    ]
                },
                "DatabaseName": {
                    "Ref": "AWSCURDatabase"
                },
                "Targets": {
                    "S3Targets": [
                        {
                            "Path": {
                                "Fn::Join": [
                                    "/",
                                    [
                                        {
                                            "Ref": "AWSCURBucket"
                                        },
                                        "Cost_Report",
                                        "AWS_Cost_Report",
                                        "AWS_Cost_Report"
                                    ]
                                ]
                            },
                            "Exclusions": [
                                "**.json",
                                "**.yml",
                                "**.sql",
                                "**.csv",
                                "**.gz",
                                "**.zip"
                            ]
                        }
                    ]
                },
                "SchemaChangePolicy": {
                    "UpdateBehavior": "UPDATE_IN_DATABASE",
                    "DeleteBehavior": "DELETE_FROM_DATABASE"
                }
            }
        },
        "AWSCURInitializer": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "AWSCURCrawler",
            "Properties": {
                "Code": {
                    "ZipFile": "const AWS = require('aws-sdk'); const response = require('./cfn-response'); exports.handler = function(event, context, callback) {\n  if (event.RequestType === 'Delete') {\n    response.send(event, context, response.SUCCESS);\n  } else {\n   const glue = new AWS.Glue();\n    glue.startCrawler({ Name: 'AWSCURCrawler-AWS_Cost_Report' }, function(err, data) {\n      if (err) {\n        const responseData = JSON.parse(this.httpResponse.body);\n        if (responseData['__type'] == 'CrawlerRunningException') {\n          callback(null, responseData.Message);\n        } else {\n          const responseString = JSON.stringify(responseData);\n          if (event.ResponseURL) {\n            response.send(event, context, response.FAILED,{ msg: responseString });\n          } else {\n            callback(responseString);\n          }\n        }\n      }\n      else {\n        if (event.ResponseURL) {\n          response.send(event, context, response.SUCCESS);\n        } else {\n          callback(null, response.SUCCESS);\n        }\n      }\n    });\n    }\n};"
                },
                "Handler": "index.handler",
                "Timeout": 30,
                "Runtime": "nodejs16.x",
                "ReservedConcurrentExecutions": 1,
                "Role": {
                    "Fn::GetAtt": [
                        "AWSCURCrawlerLambdaExecutorRole",
                        "Arn"
                    ]
                }
            }
        },
        "AWSStartCURCrawler": {
            "Type": "Custom::AWSStartCURCrawler",
            "DependsOn": "AWSCURCrawler",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AWSCURInitializer",
                        "Arn"
                    ]
                }
            }
        },
        "AWSS3CUREventLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "AWSCURBucket",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "AWSCURInitializer",
                        "Arn"
                    ]
                },
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:s3:::",
                            {
                                "Ref": "AWSCURBucket"
                            }
                        ]
                    ]
                }
            }
        },
        "AWSS3CURLambdaExecutorRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": "AWSCURBucket",
            "Properties": {
                "RoleName": {
                    "Fn::Sub": "AWSS3CURLambdaExecutorRole-${BillingEnvironmentName}"
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "AWSS3CURLambdaExecutor",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:PutBucketNotification"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:::",
                                                {
                                                    "Ref": "AWSCURBucket"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "AWSS3CURNotification": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "AWSCURInitializer",
                "AWSS3CUREventLambdaPermission",
                "AWSS3CURLambdaExecutorRole"
            ],
            "Properties": {
                "Code": {
                    "ZipFile": "const AWS = require('aws-sdk'); const response = require('./cfn-response'); exports.handler = function(event, context, callback) {\n  const s3 = new AWS.S3();\n  const putConfigRequest = function(notificationConfiguration) {\n    return new Promise(function(resolve, reject) {\n      s3.putBucketNotificationConfiguration({\n        Bucket: event.ResourceProperties.BucketName,\n        NotificationConfiguration: notificationConfiguration\n      }, function(err, data) {\n        if (err) reject({ msg: this.httpResponse.body.toString(), error: err, data: data });\n        else resolve(data);\n      });\n    });\n  };\n  const newNotificationConfig = {};\n  if (event.RequestType !== 'Delete') {\n    newNotificationConfig.LambdaFunctionConfigurations = [{\n      Events: [ 's3:ObjectCreated:*' ],\n      LambdaFunctionArn: event.ResourceProperties.TargetLambdaArn || 'missing arn',\n      Filter: { Key: { FilterRules: [ { Name: 'prefix', Value: event.ResourceProperties.ReportKey } ] } }\n    }];\n  }\n  putConfigRequest(newNotificationConfig).then(function(result) {\n    response.send(event, context, response.SUCCESS, result);\n    callback(null, result);\n  }).catch(function(error) {\n    response.send(event, context, response.FAILED, error);\n    console.log(error);\n    callback(error);\n  });\n};\n"
                },
                "Handler": "index.handler",
                "Timeout": 30,
                "Runtime": "nodejs16.x",
                "ReservedConcurrentExecutions": 1,
                "Role": {
                    "Fn::GetAtt": [
                        "AWSS3CURLambdaExecutorRole",
                        "Arn"
                    ]
                }
            }
        },
        "AWSPutS3CURNotification": {
            "Type": "Custom::AWSPutS3CURNotification",
            "DependsOn": "AWSCURBucket",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "AWSS3CURNotification",
                        "Arn"
                    ]
                },
                "TargetLambdaArn": {
                    "Fn::GetAtt": [
                        "AWSCURInitializer",
                        "Arn"
                    ]
                },
                "BucketName": {
                    "Ref": "AWSCURBucket"
                },
                "ReportKey": "Cost_Report/AWS_Cost_Report/AWS_Cost_Report"
            }
        },
        "AWSCURReportStatusTable": {
            "Type": "AWS::Glue::Table",
            "DependsOn": "AWSCURDatabase",
            "Properties": {
                "DatabaseName": {
                    "Ref": "AWSCURDatabase"
                },
                "CatalogId": {
                    "Ref": "AWS::AccountId"
                },
                "TableInput": {
                    "Name": "cost_and_usage_data_status",
                    "TableType": "EXTERNAL_TABLE",
                    "StorageDescriptor": {
                        "Columns": [
                            {
                                "Name": "status",
                                "Type": "string"
                            }
                        ],
                        "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
                        "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
                        "SerdeInfo": {
                            "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
                        },
                        "Location": {
                            "Fn::Join": [
                                "/",
                                [
                                    {
                                        "Ref": "AWSCURBucket"
                                    },
                                    "Cost_Report",
                                    "AWS_Cost_Report",
                                    "cost_and_usage_data_status"
                                ]
                            ]
                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForDeveloperGeneralCostUsageReportDB": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": "AWSCURReportStatusTable",
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/ADFS-DataDeveloperGeneral"
                    }
                },
                "Permissions": [
                    "ALL"
                ],
                "PermissionsWithGrantOption": [
                    "ALL"
                ],
                "Resource": {
                    "DatabaseResource": {
                        "Name": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForDeveloperGeneralCostUsageReportTables": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": "AWSCURReportStatusTable",
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/ADFS-DataDeveloperGeneral"
                    }
                },
                "Permissions": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "PermissionsWithGrantOption": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "Resource": {
                    "TableResource": {
                        "DatabaseName": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        },
                        "TableWildcard": {

                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForAWSCURCrawlerComponentFunctionRoleCostUsageReportDB": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": [ "AWSCURReportStatusTable", "AWSCURCrawlerComponentFunctionRole" ],
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/AWSCURCrawlerComponentFunctionRole-${BillingEnvironmentName}"
                    }
                },
                "Permissions": [
                    "CREATE_TABLE",
                    "DESCRIBE",
                    "ALTER"
                ],
                "PermissionsWithGrantOption": [
                    "CREATE_TABLE",
                    "DESCRIBE",
                    "ALTER"
                ],
                "Resource": {
                    "DatabaseResource": {
                        "Name": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForAWSCURCrawlerComponentFunctionRoleCostUsageReportTables": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": [ "AWSCURReportStatusTable", "AWSCURCrawlerComponentFunctionRole" ],
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/AWSCURCrawlerComponentFunctionRole-${BillingEnvironmentName}"
                    }
                },
                "Permissions": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "PermissionsWithGrantOption": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "Resource": {
                    "TableResource": {
                        "DatabaseName": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        },
                        "TableWildcard": {

                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForAWSCURCrawlerLambdaExecutorRoleCostUsageReportDB": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": [ "AWSCURReportStatusTable", "AWSCURCrawlerLambdaExecutorRole" ],
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/AWSCURCrawlerLambdaExecutorRole-${BillingEnvironmentName}"
                    }
                },
                "Permissions": [
                    "CREATE_TABLE",
                    "DESCRIBE",
                    "ALTER"
                ],
                "PermissionsWithGrantOption": [
                    "CREATE_TABLE",
                    "DESCRIBE",
                    "ALTER"
                ],
                "Resource": {
                    "DatabaseResource": {
                        "Name": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForAWSCURCrawlerLambdaExecutorRoleCostUsageReportTables": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": [ "AWSCURReportStatusTable", "AWSCURCrawlerLambdaExecutorRole" ],
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/AWSCURCrawlerLambdaExecutorRole-${BillingEnvironmentName}"
                    }
                },
                "Permissions": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "PermissionsWithGrantOption": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "Resource": {
                    "TableResource": {
                        "DatabaseName": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        },
                        "TableWildcard": {

                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForAWSS3CURLambdaExecutorRoleCostUsageReportDB": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": [ "AWSCURReportStatusTable", "AWSS3CURLambdaExecutorRole" ],
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/AWSS3CURLambdaExecutorRole-${BillingEnvironmentName}"
                    }
                },
                "Permissions": [
                    "CREATE_TABLE",
                    "DESCRIBE",
                    "ALTER"
                ],
                "PermissionsWithGrantOption": [
                    "CREATE_TABLE",
                    "DESCRIBE",
                    "ALTER"
                ],
                "Resource": {
                    "DatabaseResource": {
                        "Name": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        }
                    }
                }
            }
        },
        "LakeFormationPermissionsForAWSS3CURLambdaExecutorRoleCostUsageReportTables": {
            "Type": "AWS::LakeFormation::Permissions",
            "DependsOn": [ "AWSCURReportStatusTable", "AWSS3CURLambdaExecutorRole" ],
            "Properties": {
                "DataLakePrincipal": {
                    "DataLakePrincipalIdentifier": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/AWSS3CURLambdaExecutorRole-${BillingEnvironmentName}"
                    }
                },
                "Permissions": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "PermissionsWithGrantOption": [
                    "SELECT",
                    "DESCRIBE",
                    "ALTER"
                ],
                "Resource": {
                    "TableResource": {
                        "DatabaseName": {
                            "Fn::Sub": "aws_cost_usage_report_db_${BillingEnvironmentName}"
                        },
                        "TableWildcard": {

                        }
                    }
                }
            }
        }
    }
}